@*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>*@

<link href="~/lib/fullcalendar/core/main.css" rel="stylesheet" />
<link href="~/lib/fullcalendar/daygrid/main.css" rel="stylesheet" />
<link href="~/lib/fullcalendar/timegrid/main.css" rel="stylesheet" />
<link href="~/lib/fullcalendar/list/main.css" rel="stylesheet" />
@*   <link href="~/lib/fullcalendar/bootstrap/main.css" rel="stylesheet" />*@
<script src="~/lib/fullcalendar/core/main.js"></script>
<script src="~/lib/fullcalendar/interaction/main.js"></script>
<script src="~/lib/fullcalendar/daygrid/main.js"></script>
<script src="~/lib/fullcalendar/timegrid/main.js"></script>
<script src="~/lib/fullcalendar/list/main.js"></script>
<script src="~/lib/fullcalendar/bootstrap/main.js"></script>
<script src="~/lib/fullcalendar/theme-chooser.js"></script>
<script src="https://unpkg.com/popper.js/dist/umd/popper.min.js"></script>
<link href="~/lib/flatpickr/flatpickr.css" rel="stylesheet" />
<script src="~/lib/flatpickr/flatpickr.js"></script>
<script src="~/lib/moment.js/moment.js"></script>


<script>
    let currentEvent;
    var fpStartTime;
    var fpEndTime;
    $(document).ready(function () {
        fpStartTime = flatpickr("#StartTime", {
            enableTime: true,
            dateFormat: "d/m/Y h:i K"
        });

        fpEndTime = flatpickr("#EndTime", {
            enableTime: true,
            dateFormat: "d/m/Y h:i K"
        });
    });



    const formatDate = date => date === null ? '' : moment(date, 'DD/MM/YYYY h:mm A');



    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            plugins: ['bootstrap', 'interaction', 'dayGrid', 'timeGrid', 'list'],
            header: {
                left: 'prev,next oggi',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            defaultView: 'dayGridMonth',
            locale: 'it',
            height: 'auto',
            aspectRatio: 2,
            defaultDate: new Date(),
            navLinks: true, // can click day/week names to navigate views
            editable: true,
            eventClick: updateEvent,
            selectable: true,
            select: addEvent,
            eventLimit: true, // allow "more" link when too many events
            timeZone: 'local',
            eventRender: function (info) {
                $(info.el).tooltip({
                    title: info.event.extendedProps.description,
                    placement: "top",
                    trigger: "hover",
                    container: "body"
                });
            },
           @*events: function (start, end, callback) {
                $.getJSON("@Url.Action("CalScadenze", "Calendario")", function (locationsArray) {
                    var result = $(locationsArray).map(function () {
                        return {
                            title: 'Visita Fisiatrica',
                    description: 'description for Conference',
                  
                    start: '2020-06-11T10:30:00',
                    end: '2020-06-11T12:30:00'
                        };
                    }).toArray();
                    callback(result);
                });
            },*@
            events: function (start, end, timezone, callback) {
                $.ajax({
                    url: '/Calendario/CalScadenze',
                    type: "GET",
                    dataType: "JSON",

                    success: function (result) {
                        var events = [];

                        $.each(result, function (i, data) {
                            events.push(
                                {
                                    title: data.Title,
                                    description: data.Desc,
                                    start: moment(data.Start_Date).format('YYYY-MM-DD'),
                                    end: moment(data.End_Date).format('YYYY-MM-DD'),
                                    backgroundColor: "#9501fc",
                                    borderColor: "#fc0101"
                                });
                        });

                        callback(events);
                    }
                });
            },
            eventRender: function (event, element) {
                element.qtip(
                    {
                        content: event.description
                    });
            },

            editable: false

            //events: [
            //    {
            //        title: 'Visita Fisiatrica',
            //        description: 'description for Conference',
            //        //start: '2019-12-12',
            //        start: '2020-06-11T10:30:00',
            //        end: '2020-06-11T12:30:00'
            //    },
            //    {
            //        title: 'Terapia Fisiatrica',
            //        description: 'description for Conference',
            //        start: '2019-12-12',
            //        start: '2019-12-12T13:30:00',
            //        end: '2019-12-12T14:30:00'
            //    },
            //    {
            //        title: 'Terapia Fisiatrica',
            //        description: 'description for Conference',
            //        start: '2019-12-11',
            //        start: '2019-12-11T11:30:00',
            //        end: '2019-12-11T12:15:00'
            //    },
            //    {
            //        title: 'Fisiochinesi',
            //        description: 'description for Conference',
            //        start: '2019-12-10',
            //        start: '2019-12-10T08:30:00',
            //        end: '2019-12-10T10:15:00'
            //    },



            //]
        });

        calendar.render();
    });


    function updateEvent(event, element) {

        currentEvent = event;

        if ($(this).data("qtip")) $(this).qtip("hide");

        $('#eventModalLabel').html('Modifica Appuntamento');
        $('#eventModalSave').html('Update Event');
        $('#EventTitle').val(event.title);
        $('#Description').val(event.event.extendedProps.description);
        $('#isNewEvent').val(false);
        $('#EndTime').val();

        const start = moment.utc(event.event.start).local().format('DD/MM/YYYY h:mm A');

        fpStartTime.setDate(start);
        $('#StartTime').val(start);

        if (event.event.end) {
            const end = moment.utc(event.event.end).local().format('DD/MM/YYYY h:mm A')

            fpEndTime.setDate(end);
            $('#EndTime').val(end);
        }



        if (event.allDay) {
            $('#AllDay').prop('checked', 'checked');
        } else {
            $('#AllDay')[0].checked = false;
        }

        $('#eventModal').modal('show');
    }
    function addEvent(event, start, end) {

        $('#eventForm')[0].reset();

        $('#eventModalLabel').html('Nuovo Appuntamento');
        $('#eventModalSave').html('Salva');
        $('#isNewEvent').val(true);
        $('#EventTitle').val();
        //sstart = formatDate(start.startStr);
        //eend = formatDate(start.startStr);
        var start = moment.utc(event.startStr).local().format('DD/MM/YYYY h:mm A');

        fpStartTime.setDate(start);
        fpEndTime.setDate(start);
        $('#StartTime').val(start);
        $('#eventModal').modal('show');
    }
    $('#eventModalSave').click(() => {
        const title = $('#EventTitle').val();
        const description = $('#Description').val();
        const startTime = moment($('#StartTime').val());
        const endTime = moment($('#EndTime').val());
        const isAllDay = $('#AllDay').is(":checked");
        const isNewEvent = $('#isNewEvent').val() === 'true' ? true : false;

        if (startTime > endTime) {
            alert('Start Time cannot be greater than End Time');

            return;
        } else if ((!startTime.isValid() || !endTime.isValid()) && !isAllDay) {
            alert('Please enter both Start Time and End Time');

            return;
        }

        const event = {
            title,
            description,
            isAllDay,
            startTime: startTime._i,
            endTime: endTime._i
        };

        if (isNewEvent) {
            sendAddEvent(event);
        } else {
            sendUpdateEvent(event);
        }
    });

</script>




<style>
    .wrapper {
        height: 100%;
        height: -moz-available; /* WebKit-based browsers will ignore this. */
        height: fill-available;
    }
    /*
        i wish this required CSS was better documented :(
        https://github.com/FezVrasta/popper.js/issues/674
        derived from this CSS on this page: https://popper.js.org/tooltip-examples.html
        */
    .popper,
    .tooltip {
        position: absolute;
        z-index: 9999;
        background: #FFC107;
        color: black;
        width: 150px;
        border-radius: 3px;
        box-shadow: 0 0 2px rgba(0,0,0,0.5);
        padding: 10px;
        text-align: center;
    }

        .tooltip.show {
            opacity: 0.6;
        }

    .style5 .tooltip {
        background: #1E252B;
        color: #FFFFFF;
        max-width: 200px;
        width: auto;
        font-size: .8rem;
        padding: .5em 1em;
    }

    .popper .popper__arrow,
    .tooltip .tooltip-arrow {
        width: 0;
        height: 0;
        border-style: solid;
        position: absolute;
        margin: 5px;
    }

    .tooltip .tooltip-arrow,
    .popper .popper__arrow {
        border-color: #FFC107;
    }

    .style5 .tooltip .tooltip-arrow {
        border-color: #1E252B;
    }

    .popper[x-placement^="top"],
    .tooltip[x-placement^="top"] {
        margin-bottom: 5px;
    }

        .popper[x-placement^="top"] .popper__arrow,
        .tooltip[x-placement^="top"] .tooltip-arrow {
            border-width: 5px 5px 0 5px;
            border-left-color: transparent;
            border-right-color: transparent;
            border-bottom-color: transparent;
            bottom: -5px;
            left: calc(50% - 5px);
            margin-top: 0;
            margin-bottom: 0;
        }

    .popper[x-placement^="bottom"],
    .tooltip[x-placement^="bottom"] {
        margin-top: 5px;
    }

        .tooltip[x-placement^="bottom"] .tooltip-arrow,
        .popper[x-placement^="bottom"] .popper__arrow {
            border-width: 0 5px 5px 5px;
            border-left-color: transparent;
            border-right-color: transparent;
            border-top-color: transparent;
            top: -5px;
            left: calc(50% - 5px);
            margin-top: 0;
            margin-bottom: 0;
        }

    .tooltip[x-placement^="right"],
    .popper[x-placement^="right"] {
        margin-left: 5px;
    }

        .popper[x-placement^="right"] .popper__arrow,
        .tooltip[x-placement^="right"] .tooltip-arrow {
            border-width: 5px 5px 5px 0;
            border-left-color: transparent;
            border-top-color: transparent;
            border-bottom-color: transparent;
            left: -5px;
            top: calc(50% - 5px);
            margin-left: 0;
            margin-right: 0;
        }

    .popper[x-placement^="left"],
    .tooltip[x-placement^="left"] {
        margin-right: 5px;
    }

        .popper[x-placement^="left"] .popper__arrow,
        .tooltip[x-placement^="left"] .tooltip-arrow {
            border-width: 5px 0 5px 5px;
            border-top-color: transparent;
            border-right-color: transparent;
            border-bottom-color: transparent;
            right: -5px;
            top: calc(50% - 5px);
            margin-left: 0;
            margin-right: 0;
        }




    .fc-header-toolbar {
        /*
        the calendar will be butting up against the edges,
        but let's scoot in the header's buttons
        */
        padding-top: 1em;
        padding-left: 1em;
        padding-right: 1em;
    }
</style>

<body id="bodyCal">

    <div id='calendar-container'>
        <div id='calendar'></div>
    </div>

    <div class="modal fade" id="eventModal" role="dialog" aria-labelledby="eventModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="eventModalLabel">Evento</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    <form id="eventForm">
                        <div class="form-group row">
                            <label for="" class="col-sm-3 col-form-label">Attività</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="EventTitle">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="" class="col-sm-3 col-form-label">Ora Inizio</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="StartTime">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="" class="col-sm-3 col-form-label">Ora Fine</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="EndTime">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="" class="col-sm-3 col-form-label">Descrizione</label>
                            <div class="col-sm-9">
                                <textarea class="form-control" id="Description" rows="5"></textarea>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-sm-3 offset-sm-9">
                                <label><input type="checkbox" id="AllDay" /> Giorno Intero</label>
                            </div>
                        </div>
                        <input type="hidden" id="isNewEvent" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="deleteEvent">Delete</button>
                    <div>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="eventModalSave">Save Changes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

